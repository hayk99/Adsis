AUTORES: Hayk Kocharyan (757715) & Jose Felix Yagüe (755416)
ultima modificación 9/6/19

##################
TODAS LAS MAQUINAS
##################
sudo hostnamectl set-hostname debianX siendo X el numero de la máquina
sudo nano /etc/hosts

						################################
								RED INTERNA 1
						################################

################
	DEBIAN1
################
En primer lugar identificamos los adaptadores y, a continuacion, procedemos a configurar las interfaces.
(ifconfig -a para identificar redes y adaptadores)

Añadimos en el fichro de /etc/network/interfaces:

		#red host only
		auto enp0s8
		iface enp0s8 inet static
			address 192.168.56.2
			netmask 255.255.255.0
			network 192.168.56.0
			broadcast 192.168.56.255

		#red interna: net1
		auto enp0s9
		iface enp0s9 inet static
			address 192.168.1.1
			netmask 255.255.255.0
			network 192.168.1.0
			broadcast 192.168.1.255

		#red interna: net2
		aut enp0s10
		iface enp0s10 inet static
			address 192.168.2.1
			netmask 255.255.255.0
			network 192.168.2.0
			broadcast 192.168.2.255
			post-up route add -net 192.168.3.0 netmask 255.255.255.0 gw 192.168.2.150
			pre-down route del -net 192.168.3.0 netmask 255.255.255.0 gw 192.168.2.150
			#esta ruta nos permite saber a dónde redirigir los paquetes que lleguen a debian1 con destino red interna 3.


################
	DEBIAN2
################
En primer lugar quitamos el adaptador de la nat y añadimos uno nuevo para la red interna (enp0s8).

Añadimos en el fichro de /etc/network/interfaces:

	auto enp0s8
	iface enp0s8 inet static
		address 192.168.1.2
		netmask 255.255.255.0
		network 192.168.1.0
		broadcast 192.168.1.255
		gateway 192.168.1.1
		post-up route add -net 192.168.1.0. netmask 255.255.255.0 gw 192.168.1.1 dev enp0s8
		pre-down route del -net 192.168.1.0. netmask 255.255.255.0 gw 192.168.1.1 dev enp0s8
		#esta ruta nos permite redirigir el tráfico por la red interna 1.


################
	DEBIAN1
################
Para permitir el reenvio de paquetes, en el fichero /etc/sysctl.conf modificamos la siguiente linea:
		#net.ipv4.ip_forward=0 ---> net.ipv4.ip_forward=1


permitimos enrutamiento a traves de debian 1 a la interfaz enp0s9
	iptables -A FORWARD -i enp0s9 -j ACCEPT

permitimos acceso a la red de la red interna 1 con ip del host (firewall)
	iptables -t nat -A POSTROUTING -s 192.168.1.2/30 -o enp0s3 -j SNAT --to 192.168.56.2
	iptables -t nat -A POSTROUTING -s 192.168.1.2/30 -o enp0s3 -j MASQUERADE
	tambien se puede optar por esta opción, ya que aunque no sea una ip dinámica la que solicita acceso a internet, la opción masquerade funciona con estaticastambien.

	Finalmente para poder acceder al servidor web desde la extranet, vamos a habilitar el puerto http y https para el host
		iptables -t nat -A PREROUTING -i enp0s8 -p tcp --dport 80 -j DNAT --to 192.168.1.2:80
		iptables -t nat -A PREROUTING -i enp0s8 -p tcp --dport 443 -j DNAT --to 192.168.1.2:443
		con esto indicamos que cuando entren paquetes por enps08 con protocolo tcp y puerto 80 o 443 alteraremos el destino a la direccion 192.168.1.2

################
	DEBIAN2
################
una vez tenemos las iptables anteriores y las interfaces levantadas podemos instalar apache sin hacer uso de la ant en debian2

sudo apt-get update 
sudo apt-get install apache2


						################################
								RED INTERNA 2
						################################
################
	DEBIAN1
################						
Procedemos a instalar dhcp en el debian 1.
	sudo apt-get install isc-dhcp-server
	sudo nano /etc/default/isc-dhcp-server 
		--> INTERFACESv4="" ---> INTERFACESv4="enp0s10"
	Con esta linea, lo que conseguimos es restringir el servicio dhcp a esta red

Condiguramos el servicio dhcp modificando el fichero de configuracion que se encuentra en /etc/dhcp/dhcpd.conf
//datos cogidos de las diapositivas
	option domain-name "midominio.com";
	option domain-name-servers 10.0.2.3, 193.14.7.9;
	default-lease-time 600; 
	max-lease-time 7200;
	option subnet-mask 255.255.255.0;

definimos a la subred que vamos a suministrar este servicio
	subnet 192.168.2.0 netmask 255.255.255.0 {
		range 192.168.2. 192.168.2.10;
		option broadcast-address 192.168.2.255;
		option routers 192.168.2.1;
	}

definimos a la maquina debian1 como host dhcp
	host debian1 {
		hardware ethernet 08:00:27:f9:c6:8d; 
		fixed-address 192.168.2.150;
	}



#######################
	DEBIAN 3, 4 y 6
#######################
Para las 2 maquina:

desactivamos adaptador de nat y añadimos uno de tipo 'internal network' a la red 2
modificamos fichero interfaces cofigurando el adaptador como dhcp.
	allow-hotplug enp0s8
	iface enp0s8 inet dhcp

################
	DEBIAN1
################

Permitimos enrutamiento a través de debian 1 para la interfaz enp0s10
iptables -A FORWARD -i enp0s10 -j ACCEPT

Permitimos conexion a internet desde las maquinas de la red interna 2
	iptables -t nat -A POSTROUTING -s 192.168.2.0/28 -o enp0s3 -j MASQUERADE
Como con la anterior iptable hemos sido muy restrictivos tenemos que crear otro para que 192.168.2.150 (debian 6) tenga permiso de red.
	iptables -t nat -A POSTROUTING -s 192.168.2.150/32 -o enp0s3 -j MASQUERADE

Nos adelantaamos y permitimos conexion a red para la red 3 que solo dispone de un host (192.168.3.2)
	iptables -t nat -A POSTROUTING -s 192.168.3.0/30 -o enp0s3 -j MASQUERADE




tras esto ya podemos instalar sudo y net-tools para su futuro uso, ya que disponemos de conexióna internet (en las maquinas 3,4 y 6)

################
	DEBIAN6
################

Ademas para debian6:
	Tendremos que modificar el fichero /etc/dhcp/dhcpd.conf y añadir a debian6 con ip estatica.

host debian6 {
	hardware ethernet 08:00:27:05:99:28; 
	fixed-address 192.168.2.150;
}

	
		################################
				RED INTERNA 3
		################################
################
	DEBIAN 6
################
Previamente hemos desactivado el adapatador de la nat y hemos añadido otros dos adaptadores uno para la red interna 2 y otro para la red interna 3
auto enp0s8
iface enp0s8 inet static
	address 192.168.2.150
	netmask 255.255.255.0
	broadcast 192.168.2.255
	network 192.168.2.0

auto enp0s9
iface enp0s9 inet static
	address 192.168.3.1
	netmask 255.255.255.0
	broadcast 192.168.3.255
	network 192.168.3.0

activamos forwarding para esta máquina, como se hice en su momento con la debian 1.
	fichero /etc/sysctl.conf
	 #net.ipv4.ip_forward=0 ---> net.ipv4.ip_forward=1

################
	DEBIAN 5
################
auto enp0s8
iface enp0s8 inet static
	address 192.168.3.2
	netmask 255.255.255.0
	broadcast 192.168.3.255
	network 192.168.3.0
	gateway 192.168.3.1
	post-up route add -net 192.168.3.0. netmask 255.255.255.0 gw 192.168.3.1 dev enp0s8
	pre-down route del -net 192.168.3.0. netmask 255.255.255.0 gw 192.168.3.1 dev enp0s8

como ya configuramos al principio debian 1 ya conoce por donde mandar los paquetes correspondientes a debian 5 y 6

ahora ya podremos instalar el servidor ssh 
	apt-get install openssh-server
por seguridad, no permitiremos ssh como root, es decir, siguiendo los pasos de las practicas, deshabilitaremos el login como root


instalamos en debian 1 openssh-client y probamos el correcto comportamiento de la conexion con la maquina debian 5


Por último, unas ultimas iptables:
	-permitir bucle local
	iptables -A INPUT -i lo -d 127.0.0.1 -j ACCEPT

################################
		AUTOMATIZACIÓN			
################################
Para automatizar las iptables y que se carguen en el arranque, en primer lugar guardaremos las iptables creadas en un fichero localizado en /etc/ con nombre iptables_backup

iptables-save > /etc/iptables_backup

en /etc/network/if-pre-up.d creamos el fichero 'iptables' con lo siguiente

#!/bin/sh
iptables-restore < /etc/iptables_backup

y le damos permisos de ejecución

chmod +x /etc/network/if-pre-up.d/iptables
