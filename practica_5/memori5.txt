mkoarPARTE_1
___________________________________________________________________________________________________________________________________________
Tras crear el disco en la máquina virutal, arrancamos esta.
En una terminal ejecutamos 'sudo parted /dev/sdb mklabel gpt' para detallar el tipo de tabla de partición, como exige en el enunciado esta debe ser GUID Partition table.
A continuación, creamos las dos participones con 'mkpart', la sentencia es la siguiente:
	'mkpart partition1 1MiB 16MiB' y 'mkpart partition2 17MiB 32MiB'
	 (Para evitar problemas de alineamiento comenzamos las particiones en 1 y 17)
El siguiente paso es especificar el sistema de fichero, para la primera partición elegiremos ext3 y la segunda ext4, el comando es: 'sudo mkfs.ext3 /dev/sdb1' y 'sudo mkfs.ext4 /dev/sdb2'.
Para continuar, montamos las particiones: 
	'sudo mount -t ext3 /dev/sdb1/ /home/as/disk1/'
	'sudo mount -t ext4 /dev/sdb2/ /home/as/disk2/'
	(Donde disk1 y disk2 son los directorios donde montamos las particiones)
Para finalizar con el proceso, editamos fstab para que las particiones se monten en el momento que se arranque el sistema.
Añadiremos las lineas: 
	'UUID de:/dev/sdb1/ /home/as/disk1/ ext3 default 0 2'
	'UUID de:/dev/sdb2/ /home/as/disk2/ ext4 default 0 2'
	(los UUID se han obtenido a través del comando 'blkid')
En cuanto a los flags elegidos, las opciones de montaje las dejamos por defecto, para el flag dump lo dejamos a 0, ya que no deseamos ninguna compia de seguridad a traves de la herramienta dump. Finalmente, el tipo de checkeo del sistema de ficheros, lo dejamos en 2, ya que no es una partición root.
Para comprobar estos pasos, podemos ejecutar sudo parted /dev/sdb y a continuación, 'print', esto nos deberia mostrar las dos particiones. También podemos mostrar el fichero 'mtab', el cual debería contener dos lineas con nuestros nuevos discos añadidos(opcion mas recomendable).

PARTE_2
___________________________________________________________________________________________________________________________________________
Creamos un script básico,con un ssh básico con los comandos exigidos en la práctica (siguiendo el estilo de la practica 4).

PARTE_3
___________________________________________________________________________________________________________________________________________
Creamos el disco en los ajustes de Virutal Box como en el paso 1
Para crear una partición LINUX LVM debemos acceder mediante fdisk al particionado del disco, en nuestro caso el disco /dev/sdc
Una vez ejecutado 'sudo fdisk /dev/sdc', introducimos 'n' para crear una particion nueva, 'p' para que sea primario, e introducimos 3 intros, el primero para que por defecto ponga el número de particion a 1 (si lo deseamos podemos modificarlo), y los dos intros siguientes son para especificar que queremos todo el tamaño de disco para la particion. Tras esto pulsamos 't', esta opción nos dejará elegir el tipo de partición lvm, le decimos que queremos una particion 8e, a continuación, tecleamos 'w', para guardar los cambios en disco.

El siguiente paso consiste en crear el volumen físico, el comand a usar es 'sudo pvcreate /dev/sdc1', a continuación cremamos el grupo de volumenes, que llamaremos vg_p5, a través del comando 'sudo vgcreate vg_p5 /dev/sdc1'

Para extender el grupo de volumenes optamos por crear otro disco que tiene la etiqueta /dev/sdd, el cual ha sido particionado en dos, pero estas particiones no tienen formato.
Antes de la extension ejecutamos 'vgdisplay', tras la extensión lo ejecutamos de nuevo y veremos un cambio en el campo 'VG size' y en el campo 'Total PE'


Para el volumen físico, ejecutaremos el comando 'sudo pvcreate /dev/sdc'.
Para el grupo de volumenes, que lo llamaremos vg_p5, ejecutamos 'sudo vgcreate vg_p5 /dev/sdc/'
El siguiente paso consiste en crear el volumen lógico que ocupe todo el volumen físico, para ello debemos conocer su tamaño, el cual podremos obtenerlo a través del comando 'vgdisplay'. Tras la ejecución podremos ver en la linea "FREE PE /SIZE", esta nos indica el número de extents y el tamaño en MiB. Para crear el volumen lógico poremos ejecutar 'lvcreate -L 32Mib --name vl_0 vg_p5' o 'lvcreate -l 8 --name vl_0 vg_p5', en ambos casos creamos lo mismo, en la primera especificamos el tamaño en MiB en la segunda en el numero de extents lógicos, el cual es más exacto y correcto de ejecutar.
(vl_0 es el nombre que le asginamos y vg_p5 es el nombre del grupo de volumenes).
Para comprobar la correcta ejecución ejecutamos 'vgdisplay',  este nos sacará en el caso de que exista información del grupo de volumenes. Para comprobar el volumen lógico, ejecutamos 'vldisplay', este nos mostrará información del volumen lógico si se ha creado correctamente.

Damos el formato de sistema de fichero deseado: 'sudo mkfs -t ext4 /dev/vg_p5/vl_0'
y montamos, 'sudo mount -t ext4 /dev/vg_p5/lv_0 /home/as/disk3'